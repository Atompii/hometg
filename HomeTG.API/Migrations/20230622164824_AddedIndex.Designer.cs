// <auto-generated />
using System;
using HomeTG.API.Models.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeTG.API.Migrations
{
    [DbContext(typeof(CollectionDB))]
    [Migration("20230622164824_AddedIndex")]
    partial class AddedIndex
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("HomeTG.API.Models.Collection", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.HasKey("Id");

                    b.ToTable("collection");
                });

            modelBuilder.Entity("HomeTG.API.Models.CollectionCard", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("uuid");

                    b.Property<string>("CollectionId")
                        .HasColumnType("TEXT")
                        .HasColumnName("collection");

                    b.Property<int>("FoilQuantity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("foilquantity");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("TEXT")
                        .HasColumnName("lastupdated");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantity");

                    b.HasKey("Id", "CollectionId");

                    b.HasIndex("Id", "CollectionId");

                    b.ToTable("cards");
                });
#pragma warning restore 612, 618
        }
    }
}
